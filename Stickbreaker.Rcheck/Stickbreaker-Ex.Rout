
R Under development (unstable) (2018-02-08 r74238) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Stickbreaker"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Stickbreaker')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("estimate.d.MLE")
> ### * estimate.d.MLE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: estimate.d.MLE
> ### Title: Find MLE of d
> ### Aliases: estimate.d.MLE
> 
> ### ** Examples
> 
> n.muts <- length(Khan.data[1,])-1
> geno.matrix <- Khan.data[,seq(1, n.muts)]
> fit.matrix <- as.matrix(Khan.data[,(n.muts+1)])
> estimate.d.MLE(geno.matrix, fit.matrix,c(0.1, 10),0.001,c(2,1))
[1] 9.99941
> 
> 
> 
> cleanEx()
> nameEx("estimate.d.RDB")
> ### * estimate.d.RDB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: estimate.d.RDB
> ### Title: Estimate d using relative distance to boundary (RDB) methods
> ### Aliases: estimate.d.RDB
> 
> ### ** Examples
> 
> n.muts <- length(Khan.data[1,])-1
> geno.matrix <- Khan.data[,seq(1, n.muts)]
> fit.matrix <- as.matrix(Khan.data[,(n.muts+1)])
> estimate.d.RDB(geno.matrix, fit.matrix,-100)
$d.hat.RDB
[1] 2.312944

$d.hat.RDB.all
[1] -0.05

$d.hat.RDB.ind
10000.01111 01000.10111 00100.11011 00010.11101 00001.11110 11000.00111 
-0.34961538  1.07500000 -0.69480000 -0.40000000 -0.00714433 -0.55650000 
10100.01011 10010.01101 10001.01110 01100.10011 01010.10101 01001.10110 
 2.94433333  7.07500000 -0.05000000  4.47200000  1.12371429 -3.11150000 
00110.11001 00101.11010 00011.11100 11100.00011 11010.00101 11001.00110 
-2.03200000  1.68155556 -0.29433962 -0.29433962  1.68155556 -2.03200000 
10110.01001 10101.01010 10011.01100 01110.10001 01101.10010 01011.10100 
-3.11150000  1.12371429  4.47200000 -0.05000000  7.07500000  2.94433333 
00111.11000 11110.00001 11101.00010 11011.00100 10111.01000 01111.10000 
-0.55650000 -0.00714433 -0.40000000 -0.69480000  1.07500000 -0.34961538 

$d.hat.RDB.others
$d.hat.RDB.others$d.hat.median.pos
[1] 2.312944

$d.hat.RDB.others$d.hat.median
[1] -0.05

$d.hat.RDB.others$d.hat.mean
[1] 0.7250469

$d.hat.RDB.others$d.hat.mean.pos
[1] 3.061934


> 
> 
> 
> cleanEx()
> nameEx("estimate.d.sequential")
> ### * estimate.d.sequential
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: estimate.d.sequential
> ### Title: Estimate d using sequential method
> ### Aliases: estimate.d.sequential
> 
> ### ** Examples
> 
> n.muts <- length(Khan.data[1,])-1
> geno.matrix <- Khan.data[,seq(1, n.muts)]
> fit.matrix <- as.matrix(Khan.data[,(n.muts+1)])
> d.hat.MLE <- estimate.d.MLE(geno.matrix, fit.matrix,c(0.1, 10),0.001,c(2,1))
> d.hat.RDB <- estimate.d.RDB(geno.matrix, fit.matrix,-100)$d.hat.RDB
> estimate.d.sequential(geno.matrix, fit.matrix, d.hat.MLE, d.hat.RDB, c(0.1, 10), 1.1)
     RDB 
2.312944 
> 
> 
> 
> cleanEx()
> nameEx("fit.models")
> ### * fit.models
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fit.models
> ### Title: Fit all models to data
> ### Aliases: fit.models
> 
> ### ** Examples
> 
> fit.models(Chou.data, d.range=c(0.1, 10), d.adj.max=1.1, wts=c(2,1))
$fit.smry
   R2.stick   P.stick   R2.mult    P.mult    R2.add    P.add
1 0.7940693 -24.66327 0.9652463 -20.34305 0.9967278 -4.85714

$fit.stick
$fit.stick$u.hats
    mut.a     mut.b     mut.c     mut.d 
0.2150148 0.2103115 0.5479270 0.2597704 

$fit.stick$R2
[1] 0.7940693

$fit.stick$sig.hat
[1] 0.1216213

$fit.stick$logLike
[1] 12.00647

$fit.stick$regression.results
$fit.stick$regression.results$p.vals
[1] 0.0023040215 0.0024972473 0.0007457221 0.0045326695

$fit.stick$regression.results$lm.intercepts
[1] -0.1586174 -0.3341639 -0.1571737 -0.2498816

$fit.stick$regression.results$lm.slopes
[1] 0.2725629 0.3931079 0.5809853 0.3725285

$fit.stick$regression.results$P
[1] -24.66327

$fit.stick$regression.results$fitness.of.backs
       [,1]  [,2]  [,3]  [,4]
 [1,]    NA    NA    NA    NA
 [2,]    NA    NA    NA 1.000
 [3,]    NA 1.000    NA    NA
 [4,] 1.000    NA    NA    NA
 [5,]    NA    NA 1.000    NA
 [6,]    NA 1.166    NA 1.096
 [7,] 1.166    NA    NA 1.142
 [8,]    NA    NA 1.166 1.509
 [9,] 1.096 1.142    NA    NA
[10,]    NA 1.509 1.096    NA
[11,] 1.509    NA 1.142    NA
[12,] 1.299 1.320    NA 1.281
[13,]    NA 1.639 1.299 1.614
[14,] 1.639    NA 1.320 1.623
[15,] 1.614 1.623 1.281    NA
[16,] 1.812 1.784 1.435 1.752

$fit.stick$regression.results$effects.matrix
           [,1]       [,2]      [,3]      [,4]
 [1,]        NA         NA        NA        NA
 [2,]        NA         NA        NA 0.1470979
 [3,]        NA 0.08506868        NA        NA
 [4,] 0.1258307         NA        NA        NA
 [5,]        NA         NA 0.4510412        NA
 [6,]        NA 0.13818182        NA 0.1966102
 [7,] 0.1600000         NA        NA 0.1804359
 [8,]        NA         NA 0.4914286 0.2098467
 [9,] 0.1791768 0.14090218        NA        NA
[10,]        NA 0.16949153 0.5016949        NA
[11,] 0.1840194         NA 0.4875824        NA
[12,] 0.1639542 0.14223871        NA 0.1817109
[13,]        NA 0.35342186 0.6184448 0.3848397
[14,] 0.2962206         NA 0.5739023 0.3184965
[15,] 0.2682216 0.25519288 0.5557522        NA
[16,] 0.3886256 0.43831640 0.7209805 0.4860558


$fit.stick$pred.matrix
   mut.a mut.b mut.c mut.d string   fit     pred       error
1      0     0     0     0   0000 1.000 1.000000  0.00000000
2      0     0     0     1   0001 1.166 1.293151 -0.12715087
3      0     1     0     0   0100 1.096 1.237337 -0.14133652
4      1     0     0     0   1000 1.142 1.242644 -0.10064418
5      0     0     1     0   0010 1.509 1.618336 -0.10933562
6      0     1     0     1   0101 1.299 1.468834 -0.16983439
7      1     0     0     1   1001 1.320 1.472763 -0.15276328
8      0     0     1     1   0011 1.639 1.750861 -0.11186121
9      1     1     0     0   1100 1.281 1.428950 -0.14794984
10     0     1     1     0   0110 1.614 1.725629 -0.11162905
11     1     0     1     0   1010 1.623 1.728029 -0.10502850
12     1     1     0     1   1101 1.435 1.610672 -0.17567225
13     0     1     1     1   0111 1.812 1.830283 -0.01828299
14     1     0     1     1   1011 1.784 1.832059 -0.04805913
15     1     1     1     0   1110 1.752 1.812252 -0.06025226
16     1     1     1     1   1111 1.935 1.894404  0.04059594


$fit.mult
$fit.mult$s.hats
     mut.a      mut.b      mut.c      mut.d 
0.11138689 0.09479295 0.41876285 0.13349424 

$fit.mult$R2
[1] 0.9652463

$fit.mult$sig.hat
[1] 0.04996316

$fit.mult$logLike
[1] 26.24049

$fit.mult$regression.results
$fit.mult$regression.results$p.vals
[1] 0.0017009099 0.1732817752 0.0005937816 0.0083572361

$fit.mult$regression.results$lm.intercepts
[1] 0.2630103 0.1422544 0.8739467 0.2747719

$fit.mult$regression.results$lm.slopes
[1] -0.11128129 -0.03396888 -0.38202550 -0.10514601

$fit.mult$regression.results$P
[1] -20.34305

$fit.mult$regression.results$fitness.of.backs
       [,1]  [,2]  [,3]  [,4]
 [1,]    NA    NA    NA    NA
 [2,]    NA    NA    NA 1.000
 [3,]    NA 1.000    NA    NA
 [4,] 1.000    NA    NA    NA
 [5,]    NA    NA 1.000    NA
 [6,]    NA 1.166    NA 1.096
 [7,] 1.166    NA    NA 1.142
 [8,]    NA    NA 1.166 1.509
 [9,] 1.096 1.142    NA    NA
[10,]    NA 1.509 1.096    NA
[11,] 1.509    NA 1.142    NA
[12,] 1.299 1.320    NA 1.281
[13,]    NA 1.639 1.299 1.614
[14,] 1.639    NA 1.320 1.623
[15,] 1.614 1.623 1.281    NA
[16,] 1.812 1.784 1.435 1.752

$fit.mult$regression.results$effects.matrix
            [,1]       [,2]      [,3]       [,4]
 [1,]         NA         NA        NA         NA
 [2,]         NA         NA        NA 0.16600000
 [3,]         NA 0.09600000        NA         NA
 [4,] 0.14200000         NA        NA         NA
 [5,]         NA         NA 0.5090000         NA
 [6,]         NA 0.11406518        NA 0.18521898
 [7,] 0.13207547         NA        NA 0.15586690
 [8,]         NA         NA 0.4056604 0.08614977
 [9,] 0.16879562 0.12171629        NA         NA
[10,]         NA 0.06958250 0.4726277         NA
[11,] 0.07554672         NA 0.4211909         NA
[12,] 0.10469592 0.08712121        NA 0.12021858
[13,]         NA 0.10555217 0.3949192 0.12267658
[14,] 0.08846858         NA 0.3515152 0.09919901
[15,] 0.08550186 0.07948244 0.3676815         NA
[16,] 0.06788079 0.08464126 0.3484321 0.10445205


$fit.mult$pred.matrix
   mut.a mut.b mut.c mut.d string   fit     pred        error
1      0     0     0     0   0000 1.000 1.000000  0.000000000
2      0     0     0     1   0001 1.166 1.133494  0.032505756
3      0     1     0     0   0100 1.096 1.094793  0.001207048
4      1     0     0     0   1000 1.142 1.111387  0.030613106
5      0     0     1     0   0010 1.509 1.418763  0.090237149
6      0     1     0     1   0101 1.299 1.240942  0.058058491
7      1     0     0     1   1001 1.320 1.259751  0.060249354
8      0     0     1     1   0011 1.639 1.608160  0.030840475
9      1     1     0     0   1100 1.281 1.216739  0.064261462
10     0     1     1     0   0110 1.614 1.553252  0.060748429
11     1     0     1     0   1010 1.623 1.576794  0.046205562
12     1     1     0     1   1101 1.435 1.379166  0.055833871
13     0     1     1     1   0111 1.812 1.760602  0.051398286
14     1     0     1     1   1011 1.784 1.787287 -0.003287419
15     1     1     1     0   1110 1.752 1.726263  0.025736562
16     1     1     1     1   1111 1.935 1.956710 -0.021709670


$fit.add
$fit.add$w.hats
    mut.a     mut.b     mut.c     mut.d 
0.1421111 0.1263333 0.4931111 0.1710000 

$fit.add$R2
[1] 0.9967278

$fit.add$sig.hat
[1] 0.015331

$fit.add$logLike
[1] 45.14303

$fit.add$regression.results
$fit.add$regression.results$p.vals
[1] 0.1163931 0.1567340 0.5075758 0.8394202

$fit.add$regression.results$lm.intercepts
[1] 0.20295982 0.06154975 0.54195892 0.18168709

$fit.add$regression.results$lm.slopes
[1] -0.043707098  0.049056786 -0.041756992 -0.007306589

$fit.add$regression.results$P
[1] -4.85714

$fit.add$regression.results$fitness.of.backs
       [,1]  [,2]  [,3]  [,4]
 [1,]    NA    NA    NA    NA
 [2,]    NA    NA    NA 1.000
 [3,]    NA 1.000    NA    NA
 [4,] 1.000    NA    NA    NA
 [5,]    NA    NA 1.000    NA
 [6,]    NA 1.166    NA 1.096
 [7,] 1.166    NA    NA 1.142
 [8,]    NA    NA 1.166 1.509
 [9,] 1.096 1.142    NA    NA
[10,]    NA 1.509 1.096    NA
[11,] 1.509    NA 1.142    NA
[12,] 1.299 1.320    NA 1.281
[13,]    NA 1.639 1.299 1.614
[14,] 1.639    NA 1.320 1.623
[15,] 1.614 1.623 1.281    NA
[16,] 1.812 1.784 1.435 1.752

$fit.add$regression.results$effects.matrix
       [,1]  [,2]  [,3]  [,4]
 [1,]    NA    NA    NA    NA
 [2,]    NA    NA    NA 0.166
 [3,]    NA 0.096    NA    NA
 [4,] 0.142    NA    NA    NA
 [5,]    NA    NA 0.509    NA
 [6,]    NA 0.133    NA 0.203
 [7,] 0.154    NA    NA 0.178
 [8,]    NA    NA 0.473 0.130
 [9,] 0.185 0.139    NA    NA
[10,]    NA 0.105 0.518    NA
[11,] 0.114    NA 0.481    NA
[12,] 0.136 0.115    NA 0.154
[13,]    NA 0.173 0.513 0.198
[14,] 0.145    NA 0.464 0.161
[15,] 0.138 0.129 0.471    NA
[16,] 0.123 0.151 0.500 0.183


$fit.add$pred.matrix
   mut.a mut.b mut.c mut.d string   fit     pred         error
1      0     0     0     0   0000 1.000 1.000000  0.0000000000
2      0     0     0     1   0001 1.166 1.171000 -0.0050000000
3      0     1     0     0   0100 1.096 1.126333 -0.0303333333
4      1     0     0     0   1000 1.142 1.142111 -0.0001111111
5      0     0     1     0   0010 1.509 1.493111  0.0158888889
6      0     1     0     1   0101 1.299 1.297333  0.0016666667
7      1     0     0     1   1001 1.320 1.313111  0.0068888889
8      0     0     1     1   0011 1.639 1.664111 -0.0251111111
9      1     1     0     0   1100 1.281 1.268444  0.0125555556
10     0     1     1     0   0110 1.614 1.619444 -0.0054444444
11     1     0     1     0   1010 1.623 1.635222 -0.0122222222
12     1     1     0     1   1101 1.435 1.439444 -0.0044444444
13     0     1     1     1   0111 1.812 1.790444  0.0215555556
14     1     0     1     1   1011 1.784 1.806222 -0.0222222222
15     1     1     1     0   1110 1.752 1.761556 -0.0095555556
16     1     1     1     1   1111 1.935 1.932556  0.0024444444


> 
> 
> 
> cleanEx()
> nameEx("generate.geno.matrix")
> ### * generate.geno.matrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: generate.geno.matrix
> ### Title: Generate genotype matrix for given number of mutations.
> ### Aliases: generate.geno.matrix
> 
> ### ** Examples
> 
> generate.geno.matrix(5)
      mut.1 mut.2 mut.3 mut.4 mut.5
 [1,]     0     0     0     0     0
 [2,]     1     0     0     0     0
 [3,]     0     1     0     0     0
 [4,]     1     1     0     0     0
 [5,]     0     0     1     0     0
 [6,]     1     0     1     0     0
 [7,]     0     1     1     0     0
 [8,]     1     1     1     0     0
 [9,]     0     0     0     1     0
[10,]     1     0     0     1     0
[11,]     0     1     0     1     0
[12,]     1     1     0     1     0
[13,]     0     0     1     1     0
[14,]     1     0     1     1     0
[15,]     0     1     1     1     0
[16,]     1     1     1     1     0
[17,]     0     0     0     0     1
[18,]     1     0     0     0     1
[19,]     0     1     0     0     1
[20,]     1     1     0     0     1
[21,]     0     0     1     0     1
[22,]     1     0     1     0     1
[23,]     0     1     1     0     1
[24,]     1     1     1     0     1
[25,]     0     0     0     1     1
[26,]     1     0     0     1     1
[27,]     0     1     0     1     1
[28,]     1     1     0     1     1
[29,]     0     0     1     1     1
[30,]     1     0     1     1     1
[31,]     0     1     1     1     1
[32,]     1     1     1     1     1
> 
> 
> 
> cleanEx()
> nameEx("sim.add.data")
> ### * sim.add.data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sim.add.data
> ### Title: Simulate data under additive model.
> ### Aliases: sim.add.data
> 
> ### ** Examples
> 
> addcoes <- rep(0.3, 3)
> geno.matrix <- generate.geno.matrix(3)
> sim.add.data(3,addcoes,0.1,1,geno.matrix)
$fit.matrix.exp
     [,1]
[1,]  1.0
[2,]  1.3
[3,]  1.3
[4,]  1.6
[5,]  1.3
[6,]  1.6
[7,]  1.6
[8,]  1.9

$fit.matrix
         [,1]
[1,] 1.000000
[2,] 1.237355
[3,] 1.318364
[4,] 1.516437
[5,] 1.459528
[6,] 1.632951
[7,] 1.517953
[8,] 1.948743

> 
> 
> 
> cleanEx()
> nameEx("sim.data.calculate.posteriors")
> ### * sim.data.calculate.posteriors
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sim.data.calculate.posteriors
> ### Title: Simulate data from priors then use to calculate posterior
> ###   probability of models given data
> ### Aliases: sim.data.calculate.posteriors
> 
> ### ** Examples
> 
> ## Not run: 
> ##D fit.results <- fit.models(Chou.data, c(0.1, 10), 1.1, c(2,1))
> ##D sim.data.calculate.posteriors(fit.results$fit.smry,
> ##D                            Chou.data,
> ##D                            "Test",
> ##D                            c(0.05, 0.5),
> ##D                            c(0, 0.25),
> ##D                            c(0.1, 10),
> ##D                            1.1,
> ##D                            c(2,1),
> ##D                            50,
> ##D                            -1,25,
> ##D                            outdir="~/Desktop")
> ##D  
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("sim.data.from.priors.for.mod.selection")
> ### * sim.data.from.priors.for.mod.selection
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sim.data.from.priors.for.mod.selection
> ### Title: Simulate data from priors for doing model selection
> ### Aliases: sim.data.from.priors.for.mod.selection
> 
> ### ** Examples
> 
>  n.muts <- 4
>  n.muts <- length(Khan.data[1,])-1
>  geno.matrix <- Khan.data[,seq(1, n.muts)]
>  fit.matrix <- as.matrix(Khan.data[,(n.muts+1)])
>  outdir <- system.file("extdata",package="Stickbreaker")
>  file.name <- paste("Training_simulated_priors_fit_data_", n.muts, "muts.txt", sep="")
>  outpath <- paste(outdir, file.name, sep="/")
>  sim.data.from.priors.for.mod.selection(n.muts,
+    c(0.05, 0.5),
+    c(0, 0.25),
+    c(4),
+    1,
+    c(0.1, 10),
+    1.1,
+    1,
+    c(2,1),
+    outpath,
+    50,
+    coe.sim.model="identical",
+    coe.dist.par=NA,
+    print.interval=NA)
Warning in file(file, ifelse(append, "a", "w")) :
  cannot open file '/var/scratchro/tomas/QA/R-74238/lib/Stickbreaker/extdata/Training_simulated_priors_fit_data_5muts.txt': Read-only file system
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
Calls: sim.data.from.priors.for.mod.selection -> write.table -> file
Execution halted
