
R Under development (unstable) (2018-02-08 r74238) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "CoverageView"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('CoverageView')
Loading required package: Rsamtools
Loading required package: GenomeInfoDb
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, basename, cbind, colMeans, colSums, colnames,
    dirname, do.call, duplicated, eval, evalq, get, grep, grepl,
    intersect, is.unsorted, lapply, lengths, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind,
    rowMeans, rowSums, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer

Attaching package: ‘CoverageView’

The following object is masked from ‘package:rtracklayer’:

    export.wig

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CoverageBamFile-class")
> ### * CoverageBamFile-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CoverageBamFile-class
> ### Title: Class '"CoverageBamFile"'
> ### Aliases: CoverageBamFile-class CoverageBamFile
> ###   path,CoverageBamFile-method reads_mapped,CoverageBamFile-method
> ###   run_type,CoverageBamFile-method show,CoverageBamFile-method
> ### Keywords: classes
> 
> ### ** Examples
> 
> #get a Bam test file
> inputfile<-system.file("extdata","treat.bam",package="CoverageView")
>   
> #create a CoverageBamFile object
> trm<-CoverageBamFile(inputfile)
>   
> #create a CoverageBamFile object including the information of the number
> #of reads aligned and the sequencing run type
> trm1<-CoverageBamFile(inputfile,reads_mapped=28654321,run_type="single")
> 
> 
> 
> cleanEx()
> nameEx("CoverageBigWigFile-class")
> ### * CoverageBigWigFile-class
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CoverageBigWigFile-class
> ### Title: Class '"CoverageBigWigFile"'
> ### Aliases: CoverageBigWigFile-class CoverageBigWigFile
> ###   show,CoverageBigWigFile-method
> 
> ### ** Examples
> 
> ##get BigWIG test file
> inputfile<-system.file("extdata","treat.bw",package="CoverageView")
> 
> #create a CoverageBigWigFile object
> trm<-CoverageBigWigFile(inputfile)
> 
> #create a CoverageBigWigFile object including the information of the number of reads aligned
> trm1<-CoverageBigWigFile(inputfile,reads_mapped=28654321)
> 
> ##get BigWIG test file
> inputfile<-system.file("extdata","treat.bw",package="CoverageView")
> 
> #create a CoverageBigWigFile object
> trm<-CoverageBigWigFile(inputfile)
> 
> #create a CoverageBigWigFile object including the information of the number of reads aligned
> trm1<-CoverageBigWigFile(inputfile,reads_mapped=28654321)
> 
> 
> 
> cleanEx()
> nameEx("cov.interval")
> ### * cov.interval
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cov.interval
> ### Title: arithmetic operation on an interval
> ### Aliases: cov.interval cov.interval,CoverageBamFile-method
> ###   cov.interval,CoverageBigWigFile-method
> ###   cov.interval,CoverageBamFile,CoverageBamFile-method
> ###   cov.interval,CoverageBigWigFile,CoverageBigWigFile-method
> 
> ### ** Examples
> 
> ##BAM files
>   
> #get treatment and control test files
> treat1file<-system.file("extdata","treat.bam",package="CoverageView")
> control1file<-system.file("extdata","ctrl.bam",package="CoverageView")
>   
> #create two CoverageBamFile objects representing single-end alignments
> trm1<-CoverageBamFile(treat1file,run_type="single")
> ctl1<-CoverageBamFile(control1file,run_type="single")
>   
> #calculate the ratio of the coverages for the defined genomic interval using a bin_width equal to 10 nts
> cov1=cov.interval(trm1,ctl1,chr="chrI",start=1,end=100,bin_width=10,do="ratio")
>   
> #create a WIG file with the obtained vector with the ratios
> outfolder=system.file("extdata",package="CoverageView")
> an_outfile1=paste(outfolder,"out.wig",sep="/")
> export.wig(cov1,outfile=an_outfile1)
Warning in file(file, ifelse(append, "a", "w")) :
  cannot open file '/var/scratchro/tomas/QA/R-74238/lib/CoverageView/extdata/out.wig': Read-only file system
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
Calls: export.wig -> write -> cat -> file
Execution halted
